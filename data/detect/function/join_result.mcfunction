#> detect:join_resultgrant

# プレイヤーが入った時にそのプレイヤーに対して進捗を解除させます
# 他にいい感じの検知方法くれもやん
execute if data storage adv_share adventuring_time run advancement grant @s[advancements={adventure/adventuring_time=false}] only adventure/adventuring_time
execute if data storage adv_share arbalistic run advancement grant @s[advancements={adventure/arbalistic=false}] only adventure/arbalistic
execute if data storage adv_share avoid_vibration run advancement grant @s[advancements={adventure/avoid_vibration=false}] only adventure/avoid_vibration
execute if data storage adv_share blowback run advancement grant @s[advancements={adventure/blowback=false}] only adventure/blowback
execute if data storage adv_share brush_armadillo run advancement grant @s[advancements={adventure/brush_armadillo=false}] only adventure/brush_armadillo
execute if data storage adv_share bullseye run advancement grant @s[advancements={adventure/bullseye=false}] only adventure/bullseye
execute if data storage adv_share craft_decorated_pot_using_only_sherds run advancement grant @s[advancements={adventure/craft_decorated_pot_using_only_sherds=false}] only adventure/craft_decorated_pot_using_only_sherds
execute if data storage adv_share crafters_crafting_crafters run advancement grant @s[advancements={adventure/crafters_crafting_crafters=false}] only adventure/crafters_crafting_crafters
execute if data storage adv_share fall_from_world_height run advancement grant @s[advancements={adventure/fall_from_world_height=false}] only adventure/fall_from_world_height
execute if data storage adv_share hero_of_the_village run advancement grant @s[advancements={adventure/hero_of_the_village=false}] only adventure/hero_of_the_village
execute if data storage adv_share honey_block_slide run advancement grant @s[advancements={adventure/honey_block_slide=false}] only adventure/honey_block_slide
execute if data storage adv_share kill_a_mob run advancement grant @s[advancements={adventure/kill_a_mob=false}] only adventure/kill_a_mob
execute if data storage adv_share kill_all_mobs run advancement grant @s[advancements={adventure/kill_all_mobs=false}] only adventure/kill_all_mobs
execute if data storage adv_share kill_mob_near_sculk_catalyst run advancement grant @s[advancements={adventure/kill_mob_near_sculk_catalyst=false}] only adventure/kill_mob_near_sculk_catalyst
execute if data storage adv_share lighten_up run advancement grant @s[advancements={adventure/lighten_up=false}] only adventure/lighten_up
execute if data storage adv_share lightning_rod_with_villager_no_fire run advancement grant @s[advancements={adventure/lightning_rod_with_villager_no_fire=false}] only adventure/lightning_rod_with_villager_no_fire
execute if data storage adv_share minecraft_trials_edition run advancement grant @s[advancements={adventure/minecraft_trials_edition=false}] only adventure/minecraft_trials_edition
execute if data storage adv_share ol_betsy run advancement grant @s[advancements={adventure/ol_betsy=false}] only adventure/ol_betsy
execute if data storage adv_share overoverkill run advancement grant @s[advancements={adventure/overoverkill=false}] only adventure/overoverkill
execute if data storage adv_share play_jukebox_in_meadows run advancement grant @s[advancements={adventure/play_jukebox_in_meadows=false}] only adventure/play_jukebox_in_meadows
execute if data storage adv_share read_power_of_chiseled_bookshelf run advancement grant @s[advancements={adventure/read_power_of_chiseled_bookshelf=false}] only adventure/read_power_of_chiseled_bookshelf
execute if data storage adv_share revaulting run advancement grant @s[advancements={adventure/revaulting=false}] only adventure/revaulting
execute if data storage adv_share salvage_sherd run advancement grant @s[advancements={adventure/salvage_sherd=false}] only adventure/salvage_sherd
execute if data storage adv_share shoot_arrow run advancement grant @s[advancements={adventure/shoot_arrow=false}] only adventure/shoot_arrow
execute if data storage adv_share sleep_in_bed run advancement grant @s[advancements={adventure/sleep_in_bed=false}] only adventure/sleep_in_bed
execute if data storage adv_share sniper_duel run advancement grant @s[advancements={adventure/sniper_duel=false}] only adventure/sniper_duel
execute if data storage adv_share spyglass_at_dragon run advancement grant @s[advancements={adventure/spyglass_at_dragon=false}] only adventure/spyglass_at_dragon
execute if data storage adv_share spyglass_at_ghast run advancement grant @s[advancements={adventure/spyglass_at_ghast=false}] only adventure/spyglass_at_ghast
execute if data storage adv_share spyglass_at_parrot run advancement grant @s[advancements={adventure/spyglass_at_parrot=false}] only adventure/spyglass_at_parrot
execute if data storage adv_share summon_iron_golem run advancement grant @s[advancements={adventure/summon_iron_golem=false}] only adventure/summon_iron_golem
execute if data storage adv_share throw_trident run advancement grant @s[advancements={adventure/throw_trident=false}] only adventure/throw_trident
execute if data storage adv_share totem_of_undying run advancement grant @s[advancements={adventure/totem_of_undying=false}] only adventure/totem_of_undying
execute if data storage adv_share trade_at_world_height run advancement grant @s[advancements={adventure/trade_at_world_height=false}] only adventure/trade_at_world_height
execute if data storage adv_share trade run advancement grant @s[advancements={adventure/trade=false}] only adventure/trade
execute if data storage adv_share trim_with_all_exclusive_armor_patterns run advancement grant @s[advancements={adventure/trim_with_all_exclusive_armor_patterns=false}] only adventure/trim_with_all_exclusive_armor_patterns
execute if data storage adv_share trim_with_any_armor_pattern run advancement grant @s[advancements={adventure/trim_with_any_armor_pattern=false}] only adventure/trim_with_any_armor_pattern
execute if data storage adv_share two_birds_one_arrow run advancement grant @s[advancements={adventure/two_birds_one_arrow=false}] only adventure/two_birds_one_arrow
execute if data storage adv_share under_lock_and_key run advancement grant @s[advancements={adventure/under_lock_and_key=false}] only adventure/under_lock_and_key
execute if data storage adv_share very_very_frightening run advancement grant @s[advancements={adventure/very_very_frightening=false}] only adventure/very_very_frightening
execute if data storage adv_share voluntary_exile run advancement grant @s[advancements={adventure/voluntary_exile=false}] only adventure/voluntary_exile
execute if data storage adv_share walk_on_powder_snow_with_leather_boots run advancement grant @s[advancements={adventure/walk_on_powder_snow_with_leather_boots=false}] only adventure/walk_on_powder_snow_with_leather_boots
execute if data storage adv_share who_needs_rockets run advancement grant @s[advancements={adventure/who_needs_rockets=false}] only adventure/who_needs_rockets
execute if data storage adv_share whos_the_pillager_now run advancement grant @s[advancements={adventure/whos_the_pillager_now=false}] only adventure/whos_the_pillager_now
execute if data storage adv_share dragon_breath run advancement grant @s[advancements={end/dragon_breath=false}] only end/dragon_breath
execute if data storage adv_share dragon_egg run advancement grant @s[advancements={end/dragon_egg=false}] only end/dragon_egg
execute if data storage adv_share elytra run advancement grant @s[advancements={end/elytra=false}] only end/elytra
execute if data storage adv_share enter_end_gateway run advancement grant @s[advancements={end/enter_end_gateway=false}] only end/enter_end_gateway
execute if data storage adv_share find_end_city run advancement grant @s[advancements={end/find_end_city=false}] only end/find_end_city
execute if data storage adv_share kill_dragon run advancement grant @s[advancements={end/kill_dragon=false}] only end/kill_dragon
execute if data storage adv_share levitate run advancement grant @s[advancements={end/levitate=false}] only end/levitate
execute if data storage adv_share respawn_dragon run advancement grant @s[advancements={end/respawn_dragon=false}] only end/respawn_dragon
execute if data storage adv_share allay_deliver_cake_to_note_block run advancement grant @s[advancements={husbandry/allay_deliver_cake_to_note_block=false}] only husbandry/allay_deliver_cake_to_note_block
execute if data storage adv_share allay_deliver_item_to_player run advancement grant @s[advancements={husbandry/allay_deliver_item_to_player=false}] only husbandry/allay_deliver_item_to_player
execute if data storage adv_share axolotl_in_a_bucket run advancement grant @s[advancements={husbandry/axolotl_in_a_bucket=false}] only husbandry/axolotl_in_a_bucket
execute if data storage adv_share balanced_diet run advancement grant @s[advancements={husbandry/balanced_diet=false}] only husbandry/balanced_diet
execute if data storage adv_share bred_all_animals run advancement grant @s[advancements={husbandry/bred_all_animals=false}] only husbandry/bred_all_animals
execute if data storage adv_share breed_an_animal run advancement grant @s[advancements={husbandry/breed_an_animal=false}] only husbandry/breed_an_animal
execute if data storage adv_share complete_catalogue run advancement grant @s[advancements={husbandry/complete_catalogue=false}] only husbandry/complete_catalogue
execute if data storage adv_share feed_snifflet run advancement grant @s[advancements={husbandry/feed_snifflet=false}] only husbandry/feed_snifflet
execute if data storage adv_share fishy_business run advancement grant @s[advancements={husbandry/fishy_business=false}] only husbandry/fishy_business
execute if data storage adv_share froglights run advancement grant @s[advancements={husbandry/froglights=false}] only husbandry/froglights
execute if data storage adv_share kill_axolotl_target run advancement grant @s[advancements={husbandry/kill_axolotl_target=false}] only husbandry/kill_axolotl_target
execute if data storage adv_share leash_all_frog_variants run advancement grant @s[advancements={husbandry/leash_all_frog_variants=false}] only husbandry/leash_all_frog_variants
execute if data storage adv_share make_a_sign_glow run advancement grant @s[advancements={husbandry/make_a_sign_glow=false}] only husbandry/make_a_sign_glow
execute if data storage adv_share obtain_netherite_hoe run advancement grant @s[advancements={husbandry/obtain_netherite_hoe=false}] only husbandry/obtain_netherite_hoe
execute if data storage adv_share obtain_sniffer_egg run advancement grant @s[advancements={husbandry/obtain_sniffer_egg=false}] only husbandry/obtain_sniffer_egg
execute if data storage adv_share plant_any_sniffer_seed run advancement grant @s[advancements={husbandry/plant_any_sniffer_seed=false}] only husbandry/plant_any_sniffer_seed
execute if data storage adv_share plant_seed run advancement grant @s[advancements={husbandry/plant_seed=false}] only husbandry/plant_seed
execute if data storage adv_share remove_wolf_armor run advancement grant @s[advancements={husbandry/remove_wolf_armor=false}] only husbandry/remove_wolf_armor
execute if data storage adv_share repair_wolf_armor run advancement grant @s[advancements={husbandry/repair_wolf_armor=false}] only husbandry/repair_wolf_armor
execute if data storage adv_share ride_a_boat_with_a_goat run advancement grant @s[advancements={husbandry/ride_a_boat_with_a_goat=false}] only husbandry/ride_a_boat_with_a_goat
execute if data storage adv_share safely_harvest_honey run advancement grant @s[advancements={husbandry/safely_harvest_honey=false}] only husbandry/safely_harvest_honey
execute if data storage adv_share silk_touch_nest run advancement grant @s[advancements={husbandry/silk_touch_nest=false}] only husbandry/silk_touch_nest
execute if data storage adv_share tactical_fishing run advancement grant @s[advancements={husbandry/tactical_fishing=false}] only husbandry/tactical_fishing
execute if data storage adv_share tadpole_in_a_bucket run advancement grant @s[advancements={husbandry/tadpole_in_a_bucket=false}] only husbandry/tadpole_in_a_bucket
execute if data storage adv_share tame_an_animal run advancement grant @s[advancements={husbandry/tame_an_animal=false}] only husbandry/tame_an_animal
execute if data storage adv_share wax_off run advancement grant @s[advancements={husbandry/wax_off=false}] only husbandry/wax_off
execute if data storage adv_share wax_on run advancement grant @s[advancements={husbandry/wax_on=false}] only husbandry/wax_on
execute if data storage adv_share whole_pack run advancement grant @s[advancements={husbandry/whole_pack=false}] only husbandry/whole_pack
execute if data storage adv_share all_effects run advancement grant @s[advancements={nether/all_effects=false}] only nether/all_effects
execute if data storage adv_share all_potions run advancement grant @s[advancements={nether/all_potions=false}] only nether/all_potions
execute if data storage adv_share brew_potion run advancement grant @s[advancements={nether/brew_potion=false}] only nether/brew_potion
execute if data storage adv_share charge_respawn_anchor run advancement grant @s[advancements={nether/charge_respawn_anchor=false}] only nether/charge_respawn_anchor
execute if data storage adv_share create_beacon run advancement grant @s[advancements={nether/create_beacon=false}] only nether/create_beacon
execute if data storage adv_share create_full_beacon run advancement grant @s[advancements={nether/create_full_beacon=false}] only nether/create_full_beacon
execute if data storage adv_share distract_piglin run advancement grant @s[advancements={nether/distract_piglin=false}] only nether/distract_piglin
execute if data storage adv_share explore_nether run advancement grant @s[advancements={nether/explore_nether=false}] only nether/explore_nether
execute if data storage adv_share fast_travel run advancement grant @s[advancements={nether/fast_travel=false}] only nether/fast_travel
execute if data storage adv_share find_bastion run advancement grant @s[advancements={nether/find_bastion=false}] only nether/find_bastion
execute if data storage adv_share find_fortress run advancement grant @s[advancements={nether/find_fortress=false}] only nether/find_fortress
execute if data storage adv_share get_wither_skull run advancement grant @s[advancements={nether/get_wither_skull=false}] only nether/get_wither_skull
execute if data storage adv_share loot_bastion run advancement grant @s[advancements={nether/loot_bastion=false}] only nether/loot_bastion
execute if data storage adv_share netherite_armor run advancement grant @s[advancements={nether/netherite_armor=false}] only nether/netherite_armor
execute if data storage adv_share obtain_ancient_debris run advancement grant @s[advancements={nether/obtain_ancient_debris=false}] only nether/obtain_ancient_debris
execute if data storage adv_share obtain_blaze_rod run advancement grant @s[advancements={nether/obtain_blaze_rod=false}] only nether/obtain_blaze_rod
execute if data storage adv_share obtain_crying_obsidian run advancement grant @s[advancements={nether/obtain_crying_obsidian=false}] only nether/obtain_crying_obsidian
execute if data storage adv_share return_to_sender run advancement grant @s[advancements={nether/return_to_sender=false}] only nether/return_to_sender
execute if data storage adv_share ride_strider run advancement grant @s[advancements={nether/ride_strider=false}] only nether/ride_strider
execute if data storage adv_share ride_strider_in_overworld_lava run advancement grant @s[advancements={nether/ride_strider_in_overworld_lava=false}] only nether/ride_strider_in_overworld_lava
execute if data storage adv_share summon_wither run advancement grant @s[advancements={nether/summon_wither=false}] only nether/summon_wither
execute if data storage adv_share uneasy_alliance run advancement grant @s[advancements={nether/uneasy_alliance=false}] only nether/uneasy_alliance
execute if data storage adv_share use_lodestone run advancement grant @s[advancements={nether/use_lodestone=false}] only nether/use_lodestone
execute if data storage adv_share cure_zombie_villager run advancement grant @s[advancements={story/cure_zombie_villager=false}] only story/cure_zombie_villager
execute if data storage adv_share deflect_arrow run advancement grant @s[advancements={story/deflect_arrow=false}] only story/deflect_arrow
execute if data storage adv_share enchant_item run advancement grant @s[advancements={story/enchant_item=false}] only story/enchant_item
execute if data storage adv_share enter_the_end run advancement grant @s[advancements={story/enter_the_end=false}] only story/enter_the_end
execute if data storage adv_share enter_the_nether run advancement grant @s[advancements={story/enter_the_nether=false}] only story/enter_the_nether
execute if data storage adv_share follow_ender_eye run advancement grant @s[advancements={story/follow_ender_eye=false}] only story/follow_ender_eye
execute if data storage adv_share form_obsidian run advancement grant @s[advancements={story/form_obsidian=false}] only story/form_obsidian
execute if data storage adv_share iron_tools run advancement grant @s[advancements={story/iron_tools=false}] only story/iron_tools
execute if data storage adv_share lava_bucket run advancement grant @s[advancements={story/lava_bucket=false}] only story/lava_bucket
execute if data storage adv_share mine_diamond run advancement grant @s[advancements={story/mine_diamond=false}] only story/mine_diamond
execute if data storage adv_share mine_stone run advancement grant @s[advancements={story/mine_stone=false}] only story/mine_stone
execute if data storage adv_share obtain_armor run advancement grant @s[advancements={story/obtain_armor=false}] only story/obtain_armor
execute if data storage adv_share shiny_gear run advancement grant @s[advancements={story/shiny_gear=false}] only story/shiny_gear
execute if data storage adv_share smelt_iron run advancement grant @s[advancements={story/smelt_iron=false}] only story/smelt_iron
execute if data storage adv_share upgrade_tools run advancement grant @s[advancements={story/upgrade_tools=false}] only story/upgrade_tools

# leave_gameスコアを0にする
    scoreboard players set @s Detect_Join 0
